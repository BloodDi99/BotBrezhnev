const { Telegraf , Markup } = require('telegraf');
require('dotenv').config();
const text =require ('./const');
const axios = require("axios");
const city = require('./russian_city.js');

function GiveDate(){
    let yourDate = new Date();
    const date = yourDate.toISOString().split('T')[0];
    return date;
}
const bot = new Telegraf(process.env.BOT_TOKEN);
bot.start((ctx) => {
    ctx.replyWithHTML(`–ü—Ä–∏–≤–µ—Ç ${ctx.message.from.first_name ? ctx.message.from.first_name : '–°–∞–ª–∞–≥–∞ '}üëã. –Ø —Ç–µ—Å—Ç–æ–≤—ã–π –±–æ—Ç, –º–æ–≥—É –¥–∞—Ç—å —Ç–µ–±–µ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –ø–æ –ø–æ–≥–æ–¥–µ –ø—Ä–∞–∫—Ç–∏—á–µ—Å–∫–∏ –ø–æ –ª—é–±–æ–º—É –≥–æ—Ä–æ–¥—É, –Ω–∞—à–µ–π –Ω–µ–æ–±—ä—è—Ç–Ω–æ–π —Å—Ç—Ä–∞–Ω—ãüá∑üá∫üá∑üá∫üá∑üá∫.
–î–ª—è —Ç–æ–≥–æ —á—Ç–æ –±—ã –ø–æ–ª—É—á–∏—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –ø–æ–≥–æ–¥–µ, –Ω–µ–±–æ—Ö–æ–¥–∏–º–æ –≤ —á–∞—Ç –Ω–∞–ø–∏—Å–∞—Ç—å –≥–æ—Ä–æ–¥. –î–ª—è –±–æ–ª–µ–µ –ø–æ–¥—Ä–æ–±–Ω–æ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –Ω–∞–ø–∏—à–∏ –∫–æ–º–∞–Ω–¥—É /help`)
});
bot.help((ctx) => ctx.reply(text.commands));

bot.on('message', (ctx) => {
    let mess = ctx.message.text;
    console.log(mess);
    givApi(mess, ctx);
})
async function givApi(mess,ctx){
    let coord={};
    for (let index = 0; index < city.city.length ; index++) {
        if(mess===city.city[index].name){
            Object.assign(coord,city.city[index]);
        }
    }
    if(Object.keys(coord).length!==0){
       const date =  GiveDate();
        const weather = await axios.get(`https://api.open-meteo.com/v1/jma?latitude=${coord.coords.lat}&longitude=${coord.coords.lon}&hourly=temperature_2m&start_date=${date}&end_date=${date}`);
        WriteAnswer(coord.name,weather.data,ctx)
    }
    else{
        WriteEror(ctx);
    }
function WriteEror(ctx) {
    let mes='–û—à–∏–±–∫–∞, –Ω–µ –ø—Ä–∞–≤–∏–ª—å–Ω–æ –≤–≤–µ–¥–µ–Ω—ã–π –≥–æ—Ä–æ–¥ –∏–ª–∏ –≥–æ—Ä–æ–¥ –Ω–µ –Ω–∞–π–¥–µ–Ω';
    ctx.replyWithHTML(mes);
}}
function WriteAnswer(Name,data, ctx){
    let Answer = '';
        Answer = `–ü–æ–≥–æ–¥–∞ –≤ –≥–æ—Ä–æ–¥–µ <b>${Name} –Ω–∞ —Å–µ–≥–æ–¥–Ω—è \n 
        ${data.hourly.time[6].split('T')[1]} ${Math.ceil(data.hourly.temperature_2m[6])} –ì—Ä–∞–¥—É—Å–∞(–æ–≤) –ø–æ —Ü–µ–ª—å—Å–∏—é \n
        ${data.hourly.time[9].split('T')[1]} ${Math.ceil(data.hourly.temperature_2m[9])} –ì—Ä–∞–¥—É—Å–∞(–æ–≤) –ø–æ —Ü–µ–ª—å—Å–∏—é \n
        ${data.hourly.time[12].split('T')[1]} ${Math.ceil(data.hourly.temperature_2m[12])} –ì—Ä–∞–¥—É—Å–∞(–æ–≤) –ø–æ —Ü–µ–ª—å—Å–∏—é \n
        ${data.hourly.time[15].split('T')[1]} ${Math.ceil(data.hourly.temperature_2m[15])} –ì—Ä–∞–¥—É—Å–∞(–æ–≤) –ø–æ —Ü–µ–ª—å—Å–∏—é \n
        ${data.hourly.time[18].split('T')[1]} ${Math.ceil(data.hourly.temperature_2m[18])} –ì—Ä–∞–¥—É—Å–∞(–æ–≤) –ø–æ —Ü–µ–ª—å—Å–∏—é \n
        ${data.hourly.time[21].split('T')[1]} ${Math.ceil(data.hourly.temperature_2m[21])} –ì—Ä–∞–¥—É—Å–∞(–æ–≤) –ø–æ —Ü–µ–ª—å—Å–∏—é \n </b>`;
        ctx.replyWithHTML(Answer);
}
bot.launch();
process.once('SIGINT', () => bot.stop('SIGINT'));
process.once('SIGTERM', () => bot.stop('SIGTERM'));
//const coord = await axios.get(`http://api.openweathermap.org/geo/1.0/direct?q=Almetyevsk&limit=5&appid=9748a46a0ba3134b4670fead1f1c43df`);
//const weather = await axios.get(`https://api.open-meteo.com/v1/jma?latitude=${coord.data[0].lat}&longitude=${coord.data[0].lon}&hourly=temperature_2m&start_date=${date}&end_date=${date}`);
//const weather = await axios.get(`https://api.open-meteo.com/v1/jma?latitude=${city.city[index].coords.lat}&longitude=${city.city[index].coords.lon}&hourly=temperature_2m&start_date=${date}&end_date=${date}`)
//const weather = await axios.get(`https://api.open-meteo.com/v1/forecast?latitude=52.66&longitude=90.09&hourly=temperature_2m&start_date=${date}&end_date=${date}`)
//console.log(weather.data)
// Enable graceful stop
/*function addActionBot (name,src,text){
    bot.action(name, async (ctx)=>{
        try{

            await ctx.answerCbQuery()
            if (src !== false){
                await ctx.replyWithPhoto({
                    source: src
                })
            }
            await ctx.replyWithHTML('–•–£–ª–∏ –º—ã —Ç—É—Ç –∏—â–µ–º'),{
                disable_web_page_preview:true
            }

        }catch (e){
            console.error(e)
        }
    })
}
addActionBot('btn_1',false, text.text);*/
